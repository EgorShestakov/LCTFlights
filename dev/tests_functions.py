import region_finder as rf


def test_find_region():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤–∏–∫
    try:
        region_finder = rf.RegionFinder('./regions_shapefile/regions_shapefile')
    except (FileNotFoundError, ValueError) as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ shapefile: {e}")
        return

    # –ü—Ä–∏–º–µ—Ä—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_coordinates = [
        (85.0, 52.5),  # –ü—Ä–∏–º–µ—Ä –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ –ê–ª—Ç–∞–π—Å–∫–æ–º –∫—Ä–∞–µ
        (37.6, 55.7),  # –ú–æ—Å–∫–≤–∞
        (30.3, 59.9),  # –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
        (84, 57)  # –¢–æ–º—Å–∫
    ]

    for lon, lat in test_coordinates:
        region = region_finder.find_region(lat, lon)
        if region:
            print(f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã ({lat}, {lon}) –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —Ä–µ–≥–∏–æ–Ω—É: {region}")
        else:
            print(f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã ({lat}, {lon}) –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –Ω–∏ –æ–¥–Ω–æ–º—É —Ä–µ–≥–∏–æ–Ω—É")


def test_flights_percent():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤–∏–∫
    try:
        region_finder = rf.RegionFinder('./regions_shapefile/regions_shapefile')
        print("‚úÖ Shapefile –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ–≥–∏–æ–Ω–æ–≤: {len(region_finder.gdf)}")
        print("–ù–∞–∑–≤–∞–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤:", region_finder.gdf['name'].head().tolist())  # –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 5
    except (FileNotFoundError, ValueError) as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ shapefile: {e}")
        return

    # –ü—Ä–∏–º–µ—Ä—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–±–æ–ª–µ–µ —Ä–µ–∞–ª—å–Ω—ã–µ)
    test_coordinates = [
        (37.6176, 55.7558),   # –ú–æ—Å–∫–≤–∞ (–ö—Ä–µ–º–ª—å)
        (30.3351, 59.9343),   # –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ (–≠—Ä–º–∏—Ç–∞–∂)
        (83.7696, 53.3551),   # –ë–∞—Ä–Ω–∞—É–ª (–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π)
        (135.0718, 48.4802),  # –•–∞–±–∞—Ä–æ–≤—Å–∫
        (61.4026, 55.1644),   # –ß–µ–ª—è–±–∏–Ω—Å–∫
    ]

    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤:")
    print("-" * 50)

    for i, (lon, lat) in enumerate(test_coordinates, 1):
        region = region_finder.find_region(lat, lon)
        if region:
            print(f"{i}. –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã ({lat:.4f}, {lon:.4f}) ‚Üí üìç {region}")
        else:
            print(f"{i}. –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã ({lat:.4f}, {lon:.4f}) ‚Üí ‚ùå –†–µ–≥–∏–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ flights_percent
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ flights_percent:")
    print("-" * 50)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è–º–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    flight_coords = [
        (37.6176, 55.7558),   # –ú–æ—Å–∫–≤–∞
        (37.6176, 55.7558),   # –ú–æ—Å–∫–≤–∞ (–µ—â–µ —Ä–∞–∑)
        (30.3351, 59.9343),   # –°–ü–±
        (83.7696, 53.3551),   # –ë–∞—Ä–Ω–∞—É–ª
        (83.7696, 53.3551),   # –ë–∞—Ä–Ω–∞—É–ª
        (83.7696, 53.3551),   # –ë–∞—Ä–Ω–∞—É–ª
    ]

    result = rf.flights_percent(flight_coords)

    if result:
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:")
        import json
        print(json.dumps(result, ensure_ascii=False, indent=2))
    else:
        print("–§—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")